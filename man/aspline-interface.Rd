% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aspline.R
\name{aspline-interface}
\alias{aspline-interface}
\alias{.aspline}
\title{Univariate Akima Interpolation}
\usage{
.aspline(x, y = NULL, xout, n = 50, ties = mean,
  method = c("original", "improved"), degree = 3, callby = c("C",
  "Fortran"))
}
\arguments{
\item{x}{vectors giving the coordinates of the points to be
    interpolated.  Alternatively a single plotting structure can be
    specified: see \code{\link{xy.coords}}.}

\item{y}{vectors giving the coordinates of the points to be
    interpolated.  Alternatively a single plotting structure can be
    specified: see \code{\link{xy.coords}}.}

\item{xout}{an optional set of values specifying where interpolation
    is to take place.}

\item{n}{If \code{xout} is not specified, interpolation takes place at
    \code{n} equally spaced points spanning the interval [\code{min(x)},
    \code{max(x)}].}

\item{ties}{Handling of tied \code{x} values.  Either a function
    with a single vector argument returning a single number result or
    the string \code{"ordered"}.}

\item{method}{either \code{"original"} method after Akima (1970) or
    \code{"improved"} method after Akima (1991)}

\item{degree}{if improved algorithm is selected: degree of the
    polynomials for the interpolating function}

\item{callby}{A single character scalar defining the interface to the
exported function. This must be one of \code{"C"} indicates the \code{.C}
foreign function interface, \code{"Fortran"} indicates the \code{.Fortran}
foreign function interface, or \code{"Call"} indicates the \code{.Call}
modern C/C++ function interface. The supported \code{callby} choices
depend on the individual function. Any unambiguous substring can be given.}
}
\description{
The function returns a list of points which smoothly interpolate given data
points. For details see \code{\link[akima]{aspline}}.
}
\examples{
## regular spaced data
 x <- 1:10
 y <- c(rnorm(5), c(1,1,1,1,3))
 xnew <- seq(-1, 11, 0.1)

 orig <- akima::aspline(x, y, xnew)
 cfun <- .aspline(x, y, xnew)
 ffun <- .aspline(x, y, xnew, callby = "F")
 stopifnot(identical(orig, cfun))
 stopifnot(identical(orig, ffun))
}
\seealso{
\code{\link[akima]{aspline}}
}
\author{
Credit: This function is based on the \code{\link[akima]{aspline}}
functions from \strong{package::akima} by Albrecht Gebhardt \emph{et al.}.
Some minor modifications have been made to evaluate the results from the
callable interface routines implemented within this packages.
}
